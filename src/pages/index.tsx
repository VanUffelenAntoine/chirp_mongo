import {
  SignInButton,
  SignedIn,
  SignedOut,
  UserButton,
  useUser,
} from "@clerk/nextjs";
import Head from "next/head";
import Image from "next/image";

import { type RouterOutputs, api } from "~/utils/api";

import dayjs from "dayjs";
import relativeTime from "dayjs/plugin/relativeTime";
import { LoadingPage, LoadingSpinner } from "~/components/loading";

dayjs.extend(relativeTime);

const CreatePostWizard = () => {
  const { user } = useUser();

  if (!user) return null;

  return (
    <div className="border-b border-slate-400 p-4 ">
      <div className="flex gap-8">
        <Image
          src={user.imageUrl}
          alt="Profile picture"
          className="h-14 w-14 rounded-full"
          width={56}
          height={56}
        />
        <input
          placeholder="Type Some emojis!"
          className="grow bg-transparent"
        />
      </div>
    </div>
  );
};

type PostWithUser = RouterOutputs["post"]["getAll"][number];
const PostView = (props: PostWithUser) => {
  const { post, author } = props;

  return (
    <div className="align-center flex gap-8 border-b border-slate-400 p-4">
      <Image
        src={author.imageUrl}
        alt="Profile picture"
        className="h-14 w-14 rounded-full"
        width={56}
        height={56}
      />
      <div className="flex flex-col">
        <div className="flex gap-1">
          <span className="font-bold">{`@${author.username} `}</span>
          <span className="font-thin">{` Â· ${dayjs(post.createdAt).fromNow()}`}</span>
        </div>
        <span className="text-xl">{post.content}</span>
      </div>
    </div>
  );
};

const Feed = () => {
  const { data, isLoading } = api.post.getAll.useQuery();

  if (isLoading) return <LoadingPage />;
  if (!data)
    return <div>Something went wrong, please try refreshing the page</div>;

  return (
    <div>
      {[...data, ...data]?.map((fullPost) => (
        <PostView {...fullPost} key={fullPost.post.id} />
      ))}
    </div>
  );
};

export default function Home() {
  const { isLoaded } = useUser();
  //Fetch data early
  api.post.getAll.useQuery();

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex h-screen justify-center">
        <div className="h-full w-full border-x border-slate-400 md:max-w-2xl">
          <div className="border-b border-slate-400 p-4 ">
            <div className="flex justify-end">
              <div>
                {!isLoaded ? (
                  <LoadingSpinner size={8} />
                ) : (
                  <>
                    <SignedIn>
                      {/* Mount the UserButton component */}
                      <UserButton />
                    </SignedIn>
                    <SignedOut>
                      {/* Signed out users get sign in button */}
                      <SignInButton />
                    </SignedOut>
                  </>
                )}
              </div>
            </div>
          </div>
          <CreatePostWizard />
          <Feed />
        </div>
      </main>
    </>
  );
}
